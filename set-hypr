#!/bin/bash

INSTLOG="$HOME/install.log"

# Function to create backup and setup configuration directories
setup_directories() {
    for DIR in hypr kitty mako swaylock waybar wlogout wofi; do
        DIRPATH="$HOME/.config/$DIR"
        if [ -d "$DIRPATH" ]; then
            echo -e "Config for $DIR located, backing up."
            mv "$DIRPATH" "$DIRPATH-back" &>> "$INSTLOG"
            echo -e "Backed up $DIR to $DIRPATH-back."
        fi
        mkdir -p "$DIRPATH" &>> "$INSTLOG"
    done
}

# Function to link config files
link_config_files() {
    echo -e "Setting up the new config..."
    cp ~/.config/HyprV/hypr/* ~/.config/hypr/
    ln -sf ~/.config/HyprV/kitty/kitty.conf ~/.config/kitty/kitty.conf
    ln -sf ~/.config/HyprV/mako/conf/config-dark ~/.config/mako/config
    ln -sf ~/.config/HyprV/swaylock/config ~/.config/swaylock/config
    ln -sf ~/.config/HyprV/waybar/conf/v4-config.jsonc ~/.config/waybar/config.jsonc
    ln -sf ~/.config/HyprV/waybar/style/v4-style-dark.css ~/.config/waybar/style.css
    ln -sf ~/.config/HyprV/wlogout/layout ~/.config/wlogout/layout
    ln -sf ~/.config/HyprV/wofi/config ~/.config/wofi/config
    ln -sf ~/.config/HyprV/wofi/style/v4-style-dark.css ~/.config/wofi/style.css
}

# Function to add Nvidia env file if needed
add_nvidia_env() {
    if [[ "$ISNVIDIA" == true ]]; then
        echo -e "\nsource = ~/.config/hypr/env_var_nvidia.conf" >> ~/.config/hypr/hyprland.conf
    fi
}

# Function to copy SDDM theme
setup_sddm_theme() {
    echo -e "Setting up the login screen."
    sudo cp -R Extras/sdt /usr/share/sddm/themes/
    sudo chown -R $USER:$USER /usr/share/sddm/themes/sdt
    sudo mkdir /etc/sddm.conf.d
    echo -e "[Theme]\nCurrent=sdt" | sudo tee -a /etc/sddm.conf.d/10-theme.conf &>> "$INSTLOG"
}

# Function to create Wayland session directory and setup desktop file
setup_wayland_session() {
    WLDIR="/usr/share/wayland-sessions"
    if [ -d "$WLDIR" ]; then
        echo -e "$WLDIR found"
    else
        echo -e "$WLDIR NOT found, creating..."
        sudo mkdir "$WLDIR"
    fi
    sudo cp Extras/hyprland.desktop "$WLDIR/"
}

# Function to set the look and feel as dark
set_dark_theme() {
    xfconf-query -c xsettings -p /Net/ThemeName -s "Adwaita-dark"
    xfconf-query -c xsettings -p /Net/IconThemeName -s "Papirus-Dark"
    gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark"
    gsettings set org.gnome.desktop.interface icon-theme "Papirus-Dark"
    cp -f ~/.config/HyprV/backgrounds/v4-background-dark.jpg /usr/share/sddm/themes/sdt/wallpaper.jpg
}

# Function to install starship shell
install_starship_shell() {
    echo -e "Installing Starship shell..."
    echo -e '\neval "$(starship init bash)"' >> ~/.bashrc
    cp Extras/starship.toml ~/.config/
}

# Function to install Asus ROG software
install_asus_rog() {
    echo -e "Installing ROG packages..."
    emerge --ask app-laptop/asusctl app-laptop/supergfxctl app-laptop/rog-control-center

    echo -e "Activating ROG services..."
    sudo rc-update add power-profiles-daemon default
    sudo rc-service power-profiles-daemon start
    sudo rc-update add supergfxd default
    sudo rc-service supergfxd start

    echo -e "\nsource = ~/.config/hypr/rog-g15-strix-2021-binds.conf" >> ~/.config/hypr/hyprland.conf
}

# Main script execution
setup_directories
link_config_files
add_nvidia_env
setup_sddm_theme
setup_wayland_session
set_dark_theme

read -rp $'Would you like to activate the starship shell? (y/n): ' STAR
[[ $STAR == "Y" || $STAR == "y" ]] && install_starship_shell

read -rp $'For ASUS ROG Laptops - Would you like to install Asus ROG software support? (y/n): ' ROG
[[ $ROG == "Y" || $ROG == "y" ]] && install_asus_rog

echo -e "Script has completed!"
[[ "$ISNVIDIA" == true ]] && exit

read -rp $'Would you like to start Hyprland now? (y/n): ' HYP
[[ $HYP == "Y" || $HYP == "y" ]] && sudo rc-service sddm start &>> "$INSTLOG"
