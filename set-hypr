#!/bin/bash
export LANG=C.UTF-8
export LC_ALL=C.UTF-8

# Hyprland Setup Script for Gentoo
# Original Script by SolDoesTech

# Define package categories
prep_stage=(
    dev-qt/qtwayland 
    gtk+
    media-video/pipewire
    media-video/wireplumber
    gui-apps/wl-clipboard
    app-misc/jq 
    dev-python/dbus-python 
    sys-apps/bubblewrap
    app-portage/eix
    media-fonts/symbols-nerd-font
    gui-wm/hyprland
)

nvidia_stage=(
    sys-kernel/linux-headers 
    x11-drivers/nvidia-drivers 
    media-libs/libva 
    media-libs/libva-utils 
)

install_stage=(
    x11-terms/kitty 
    gui-apps/mako 
    gui-apps/waybar 
    gui-apps/swaylock 
    sys-process/btop 
    www-client/firefox-bin 
    mail-client/thunderbird-bin 
    media-video/mpv 
    media-sound/pamixer 
    media-sound/pavucontrol 
    app-misc/brightnessctl 
    net-wireless/bluez 
    net-wireless/bluez-tools 
    net-wireless/blueman 
    net-misc/networkmanager 
    gnome-base/gvfs 
    xfce-extra/thunar-archive-plugin 
    app-arch/file-roller
    app-shells/starship 
    x11-themes/papirus-icon-theme 
    media-fonts/jetbrains-mono 
    media-fonts/noto-emoji 
    xfce-base/xfce4-settings
    x11-themes/adwaita-icon-theme
    x11-misc/sddm
)

# Color definitions
CNT="[\e[1;36mNOTE\e[0m]"
COK="[\e[1;32mOK\e[0m]"
CER="[\e[1;31mERROR\e[0m]"
CAT="[\e[1;37mATTENTION\e[0m]"
CWR="[\e[1;35mWARNING\e[0m]"
CAC="[\e[1;33mACTION\e[0m]"
INSTLOG="install.log"

# Functions

# Clean the install log
> $INSTLOG

# Show progress of installation
show_progress() {
    while ps | grep $1 &> /dev/null; do
        echo -n "."
        sleep 2
    done
    echo -en "Done!\n"
    sleep 2
}

# Install software
install_software() {
    if equery list $1 &> /dev/null; then
        echo -e "$COK - $1 is already installed. Skipping..."
    else
        echo -en "$CNT - Installing $1 ..."
        sudo emerge --quiet $1 &>> $INSTLOG &
        show_progress $!
        if equery list $1 &> /dev/null; then
            echo -e "$COK - $1 installed successfully."
        else
            echo -e "$CER - $1 installation failed. Check $INSTLOG."
        fi
    fi
}

# Clear the screen and show the welcome message
clear
echo -e "$CNT - Setting up Hyprland on Gentoo. Hyprland is currently in Beta."
sleep 1

# Check if running on a VM
echo -e "$CNT - Checking for Physical or VM..."
ISVM=$(hostnamectl | grep Chassis)
echo -e "Using $ISVM"
if [[ $ISVM == *"vm"* ]]; then
    echo -e "$CWR - VMs may not be fully supported. Proceed with caution."
    sleep 1
fi

# Inform about sudo usage
echo -e "$CNT - This script requires sudo. Ensure you have sudo access."
sleep 1

# Continue with installation prompt
read -rep $'[\e[1;33mACTION\e[0m] - Continue with the install? (y,n) ' CONTINST
if [[ $CONTINST != "Y" && $CONTINST != "y" ]]; then
    echo -e "$CNT - No changes made. Exiting..."
    exit 0
fi

# Check for Nvidia GPU
ISNVIDIA=false
if lspci -k | grep -A 2 -E "(VGA|3D)" | grep -iq nvidia; then
    ISNVIDIA=true
fi

# Configure Portage settings
echo -e "$CNT - Configuring package.unmask and package.accept_keywords files..."
sudo mkdir -p /etc/portage/package.unmask /etc/portage/package.accept_keywords

# Create package.unmask file
UNMASK_FILE="/etc/portage/package.unmask/custom-unmask"
{
    echo "=net-wireless/bluez-tools-0.2"
    echo "=app-misc/brightnessctl-1.1"
} | sudo tee $UNMASK_FILE

# Create package.accept_keywords file
KEYWORDS_FILE="/etc/portage/package.accept_keywords/custom-keywords"
{
    echo "net-wireless/bluez-tools ~amd64"
    echo "app-misc/brightnessctl ~amd64"
} | sudo tee $KEYWORDS_FILE

# Install packages prompt
read -rep $'[\e[1;33mACTION\e[0m] - Install packages? (y,n) ' INST
if [[ $INST == "Y" || $INST == "y" ]]; then
    echo -e "$CNT - Installing preparation packages..."
    for package in "${prep_stage[@]}"; do
        install_software $package
    done

    if [[ "$ISNVIDIA" == true ]]; then
        echo -e "$CNT - Installing Nvidia-specific packages..."
        for package in "${nvidia_stage[@]}"; do
            install_software $package
        done
    fi

    echo -e "$CNT - Installing main packages..."
    for package in "${install_stage[@]}"; do
        install_software $package
    done

    echo -e "$CNT - Enabling Bluetooth service..."
    sudo rc-service bluetooth start
    sudo rc-update add bluetooth default
    sleep 2

    install_software gui-libs/display-manager-init

    echo -e "$CNT - Configuring SDDM as the display manager..."
    if ! grep -q '^DISPLAYMANAGER="sddm"$' /etc/conf.d/display-manager; then
        echo -e "$CNT - Configuring SDDM..."
        sudo cp /etc/conf.d/display-manager /etc/conf.d/display-manager.bak
        sudo sed -i '/^CHECKVT=/d' /etc/conf.d/display-manager
        sudo sed -i '/^DISPLAYMANAGER=/d' /etc/conf.d/display-manager
        echo -e "CHECKVT=7\nDISPLAYMANAGER=\"sddm\"" | sudo tee -a /etc/conf.d/display-manager > /dev/null
    else
        echo -e "$CNT - SDDM already configured."
    fi

    echo -e "$CNT - Enabling elogind service..."
    sudo rc-update add elogind boot
    sudo rc-service elogind start &>> $INSTLOG
    sleep 2

    echo -e "$CNT - Enabling SDDM to start at boot..."
    sudo rc-update add display-manager default &>> $INSTLOG
fi

# Copy configuration files
echo -e "$CNT - Copying configuration files..."
### Copy Config Files ###
read -rep $'[\e[1;33mACTION\e[0m] - Would you like to copy config files? (y,n) ' CFG
if [[ $CFG == "Y" || $CFG == "y" ]]; then
    # Get the username and home directory of the non-root user
    TARGET_USER=${SUDO_USER:-$(whoami)}
    USER_HOME=$(eval echo "~$TARGET_USER")

    echo -e "$CNT - Copying config files..."

    # copy the HyprV directory to the user's config directory
    cp -R HyprV "$USER_HOME/.config/"

    # Set the measuring unit
    echo -e "$CNT - Attempting to set measuring unit..."
    if locale -a | grep -q ^en_US; then
        echo -e "$COK - Setting measuring system to imperial..."
        ln -sf "$USER_HOME/.config/HyprV/waybar/conf/mesu-imp.jsonc" "$USER_HOME/.config/HyprV/waybar/conf/mesu.jsonc"
        sed -i 's/SET_MESU=""/SET_MESU="I"/' "$USER_HOME/.config/HyprV/hyprv.conf"
    else
        echo -e "$COK - Setting measuring system to metric..."
        sed -i 's/SET_MESU=""/SET_MESU="M"/' "$USER_HOME/.config/HyprV/hyprv.conf"
        ln -sf "$USER_HOME/.config/HyprV/waybar/conf/mesu-met.jsonc" "$USER_HOME/.config/HyprV/waybar/conf/mesu.jsonc"
    fi

    # Setup each application
    for DIR in hypr kitty mako swaylock waybar wlogout wofi 
    do 
        DIRPATH="$USER_HOME/.config/$DIR"
        if [ -d "$DIRPATH" ]; then 
            echo -e "$CAT - Config for $DIR located, backing up."
            mv "$DIRPATH" "$DIRPATH-back" &>> $INSTLOG
            echo -e "$COK - Backed up $DIR to $DIRPATH-back."
        fi

        # Make new empty folders
        mkdir -p "$DIRPATH" &>> $INSTLOG
    done

    # Link up the config files
    echo -e "$CNT - Setting up the new config..." 
    cp "$USER_HOME/.config/HyprV/hypr/"* "$USER_HOME/.config/hypr/"
    ln -sf "$USER_HOME/.config/HyprV/kitty/kitty.conf" "$USER_HOME/.config/kitty/kitty.conf"
    ln -sf "$USER_HOME/.config/HyprV/mako/conf/config-dark" "$USER_HOME/.config/mako/config"
    ln -sf "$USER_HOME/.config/HyprV/swaylock/config" "$USER_HOME/.config/swaylock/config"
    ln -sf "$USER_HOME/.config/HyprV/waybar/conf/v4-config.jsonc" "$USER_HOME/.config/waybar/config.jsonc"
    ln -sf "$USER_HOME/.config/HyprV/waybar/style/v4-style-dark.css" "$USER_HOME/.config/waybar/style.css"
    ln -sf "$USER_HOME/.config/HyprV/wlogout/layout" "$USER_HOME/.config/wlogout/layout"
    ln -sf "$USER_HOME/.config/HyprV/wofi/config" "$USER_HOME/.config/wofi/config"
    ln -sf "$USER_HOME/.config/HyprV/wofi/style/v4-style-dark.css" "$USER_HOME/.config/wofi/style.css"

    # Add the Nvidia env file to the config (if needed)
    if [[ "$ISNVIDIA" == true ]]; then
        echo -e "\nsource = $USER_HOME/.config/hypr/env_var_nvidia.conf" >> "$USER_HOME/.config/hypr/hyprland.conf"
    fi

    # Copy the SDDM theme
    echo -e "$CNT - Setting up the login screen."
    sudo cp -R Extras/sdt /usr/share/sddm/themes/
    sudo chown -R "$TARGET_USER:$TARGET_USER" /usr/share/sddm/themes/sdt
    sudo mkdir -p /etc/sddm.conf.d
    echo -e "[Theme]\nCurrent=sdt" | sudo tee -a /etc/sddm.conf.d/10-theme.conf &>> $INSTLOG

    WLDIR=/usr/share/wayland-sessions
    if [ -d "$WLDIR" ]; then
        echo -e "$COK - $WLDIR found"
    else
        echo -e "$CWR - $WLDIR NOT found, creating..."
        sudo mkdir $WLDIR
    fi 
    
    # Stage the .desktop file
    sudo cp Extras/hyprland.desktop /usr/share/wayland-sessions/

    # Setup the first look and feel as dark
    sudo -u "$TARGET_USER" xfconf-query -c xsettings -p /Net/ThemeName -s "Adwaita-dark"
    sudo -u "$TARGET_USER" xfconf-query -c xsettings -p /Net/IconThemeName -s "Papirus-Dark"
    sudo -u "$TARGET_USER" gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark"
    sudo -u "$TARGET_USER" gsettings set org.gnome.desktop.interface icon-theme "Papirus-Dark"
    sudo -u "$TARGET_USER" cp -f "$USER_HOME/.config/HyprV/backgrounds/v4-background-dark.jpg" /usr/share/sddm/themes/sdt/wallpaper.jpg
fi

# Finalize
echo -e "$COK - Setup complete! Please reboot to apply changes."
sleep 2
